tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
x <- sample(-1:1, size = n, replace = TRUE)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
x <- c(-1, -1, 0, 1, -1, -1, -1, -1, -1)
length(x)
x <- c(-1, -1, 0, 1, -1, -1, -1, -1, -1, -1)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
x <- c(-1, -1, 0, 1, -1, 1, -1, 1, -1, -1)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
n <- 10
tmax <- 10
#x <- sample(-1:1, size = n, replace = TRUE)
x <- c(-1, 0, 1, -1, 1, -1, 1, -1, 1, -1)
X <- t(x)
for (t in 2:tmax) {
z <- rep(NA, n)
for (j in 1:n) {
if (j == 1) {
z[1] <- X[t - 1, 1] + X[t - 1, 2]
} else {
if (j == n) {
z[n] <- X[t - 1, n - 1] + X[t - 1, n]
} else {
z[j] <- sum(X[t - 1, (j - 1):(j + 1)])
}
}
}
xt <- ifelse(z > 0, 1, ifelse(z < 0, -1, 0))
X <- rbind(X, xt)
if (all(X[t - 1, ] == X[t, ])) break
}
rownames(X) <- paste("t =", 1:nrow(X))
X
3**10
source('~/r-ws/r-prog/UE3_Brooking_Nicholas.R', echo=TRUE)
teach.frame
?t.test()
teach.frame[[c(1, 1)]]
teach.frame[[c(1, 2)]]
teach.frame[1:2, ]
t.test(teach.frame[1:2, ])
teach.frame[1:2, ]
teach$PTBG12
teach$PTBG14A
teach$PTBG14A == 1
teach$PTBG14A == 2
teach$PTBG14A
numeric(teach$PTBG14A) == 1
numeric(teach$PTBG14A) == 1
as.numeric(teach$PTBG14A) == 1
t.test(teach$PTBG12[as.numeric(teach$PTBG14A) == 1], teach$PTBG12[as.numeric(teach$PTBG14A) == 2])
teach$PTBG12[as.numeric(teach$PTBG14A) == 1]
length(teach$PTBG12[as.numeric(teach$PTBG14A) == 1])
length(teach$PTBG12)
t.test(teach$PTBG12[as.numeric(teach$PTBG14A) == 1], teach$PTBG12[as.numeric(teach$PTBG14A) == 2])
head(teach)
sapply(teach, is.numeric)
sapply(teach, is.numeric) == TRUE
which(sapply(teach, is.numeric))
teach[[which(sapply(teach, is.numeric))]]
teach[which(sapply(teach, is.numeric))]
teach[which(sapply(teach, is.numeric))]
teach[which(sapply(teach, is.numeric))]
teach[which(sapply(teach, is.numeric))]
t.test(teach$PTBG12[as.numeric(teach$PTBG14A) == 1], teach$PTBG12[as.numeric(teach$PTBG14A) == 2])
teach.frame <- data.frame(mittel, standard.fehler)
teach.frame
names(teach)
head(teach, n = 1)
teach$PTBG01
teach$PTBG02
?aggregate
aggregate(teach[which(sapply(teach, is.numeric))], teach$PTBG02, mean)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(Gender = teach$PTBG02), mean)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(Gender = teach$PTBG02), mean, sum)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), mean)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), sd)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(Gender = teach$PTBG02), sd)
teach$PTBG16
teach$PTBP16
aggregate(teach[which(sapply(teach, is.numeric))], by = list(Gender = teach$PTBG02), sd)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(Gender = teach$PTBG02), mean)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), sd)
aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDFOOL = teach$IDSCHOOL), sd)
teach.agg <- aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), sd)
teach.agg
load("teach.agg.RDATA") -> teach.agg2
teach.agg2
load("teach.agg.RDATA") -> H
H
load("teach.agg.RDATA")
teach.agg
source('~/r-ws/r-prog/UE3_Brooking_Nicholas.R', echo=TRUE)
teach.agg
head(teach.agg)
teach.agg2 <- aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), sd)
head(teach.agg2)
teach.agg2 <- aggregate(teach[which(sapply(teach, is.numeric))], by = list(IDSCHOOL = teach$IDSCHOOL), mean)
head(teach.agg2)
head(teach.agg)
head(school)
merge(school, teach.agg2, by = IDSCHOOL)
?merge
intersect(names(school), names(teach.agg2))
merge(school, teach.agg2, by = "IDSCHOOL")
names(school)
school$IDCNTRY
school.merge
school.merge <- merge(school, teach.agg2, by = "IDSCHOOL")
school.merge
head(school.merge)
by(school.merge, school.merge$IDSCHOOL, mean)
mittel <- tapply(teach$PTBG12, teach$PTBG14A, mean, na.rm = TRUE)
mittel
t.test(teach$PTBG12[as.numeric(teach$PTBG14A) == 1], teach$PTBG12[as.numeric(teach$PTBG14A) == 2])
mittel
school[c(1, 15)]
?by
school.merge[, c(1, 15)]
school.merge[c(1, 15)]
names(school)
school[15]
names(school.merge)
school.merge$PCBG04
school.merge
head(school.merge)
student
head(student)
school$PSBG01 == 1
[as.numeric(school$PSBG01) == 1]
school[as.numeric(school$PSBG01) == 1]
as.numeric(school$PSBG01)
school$PSBG01
school[as.numeric(student$PSBG01) == 1]
student[as.numeric(student$PSBG01) == 1]
as.numeric(student$PSBG01) == 1
student[[as.numeric(student$PSBG01) == 1]]
student[ ,as.numeric(student$PSBG01) == 1]
student$PSBG01
student[ ,which(as.numeric(student$PSBG01) == 1)]
which(as.numeric(student$PSBG01) == 1)
student[which(as.numeric(student$PSBG01) == 1)]
student[which(as.numeric(student$PSBG01) == 1), ]
student$PSBG01[which(as.numeric(student$PSBG01) == 1), ]
male.student <- student[which(as.numeric(student$PSBG01) == 1), ]
male.student
male.student[100"100"]
male.student[100]
male.student[1000]
male.student[1]
male.student[3]
male.student[4]
male.student[5]
male.student[6]
male.student[67
]
male.student[7]
male.students <- student[which(as.numeric(student$PSBG01) == 2), ]
male.students <- student[which(as.numeric(student$PSBG01) == 2), ]
male.students[7]
aggregate(school.merge[], by = school.merge$IDSCHOOL, mean)
aggregate(school.merge[], by = by=list(student$IDSCHOOL, student$IDCLASS), mean)
aggregate(school.merge[], by = list(student$IDSCHOOL, student$IDCLASS), mean)
aggregate(school.merge[], by = list(student$IDSCHOOL), mean)
aggregate(school.merge, by = list(student$IDSCHOOL), mean)
aggregate(student, by = list(student$IDSCHOOL), mean)
rbind(female.students, male.students)
female.students <- student[which(as.numeric(student$PSBG01) == 1), ]
male.students <- student[which(as.numeric(student$PSBG01) == 2), ]
rbind(female.students, male.students)
student$ITSEX
by(student, student$ITSEX)
by(student, student$ITSEX, FUN = function(x) x)
merge(student, school, by = "IDSCHOOL", all.x = TRUE)
?merge
intersect(names(student), names(school))
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
?par
par(mfrow=c(3,1),mar=c(2,2,1,1))
par(mfrow=c(3,1),mar=c(2,2,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7);
par(mfrow=c(3,1),mar=c(2,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7);
par(mfrow=c(3,1),mar=c(1,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7);
par(mfrow=c(3,1),mar=c(1,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7)
par(mfrow=c(3,1),mar=c(1,2,3,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7)
par(mfrow=c(1,3),mar=c(1,2,3,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7)
par(mfrow=c(3,1),mar=c(1,2,3,1,1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7)
par(mfrow=c(3,1),mar=c(3, 2, 1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
plot(t, prod.lm4$residuals); mtext("(d)",side=3,cex=0.7)
par(mfrow=c(3,1),mar=c(3, 2, 1))
plot(t, prod.lm1$residuals); mtext("(a)",side=3,cex=0.7);
plot(t, prod.lm2$residuals); mtext("(b)",side=3,cex=0.7);
plot(t, prod.lm3$residuals); mtext("(c)",side=3,cex=0.7);
q <- 168
q2 <- 400
z <- rep(0, q)
z <- c(z, 1:(n - q))
z2 <- rep(0, q2)
z2 <- c(z2, 1:(n - q2))
prod.btrend <- lm(g~t + z + z2)
lines(t, prod.btrend$fitted.values, col = "red")
plot(t, g, type = "l")
lines(t, prod.btrend$fitted.values, col = "red")
plot(t, g1, type = "l")
lines(t, prod.btrend$fitted.values, col = "red")
q <- 168
q2 <- 400
z <- rep(0, q)
z <- c(z, 1:(n - q))
z2 <- rep(0, q2)
z2 <- c(z2, 1:(n - q2))
z3 <- ifelse(z2 > 0, 1, 0)
prod.trend <- lm(g~t + z)
prod.btrend1 <- lm(g~t + z + z2)
prod.btrend2 <- lm(g~t + z + z2 + z3))
q <- 168
q2 <- 400
z <- rep(0, q)
z <- c(z, 1:(n - q))
z2 <- rep(0, q2)
z2 <- c(z2, 1:(n - q2))
z3 <- ifelse(z2 > 0, 1, 0)
prod.trend <- lm(g~t + z)
prod.btrend1 <- lm(g~t + z + z2)
prod.btrend2 <- lm(g~t + z + z2 + z3)
plot(t, g1, type = "l")
lines(t, prod.btrend$fitted.values, col = "red")
plot(t, g2, type = "l")
line(t, prod.btrend)
# abline(v = t[q], col = "blue")
abline(v = t[q], col = "green")
abline(v = t[q2], col = "blue")
plot(t, g1, type = "l")
lines(t, prod.btrend$fitted.values, col = "red")
plot(t, g2, type = "l")
line(t, prod.btrend)
# abline(v = t[q], col = "blue")
abline(v = t[q], col = "green")
abline(v = t[q2], col = "blue")
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
?mar
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
source('~/r-ws/zeitreihen/proj1/uni-zeitreihen/analyse.R', echo=TRUE)
library(mFilter)
hpfilter()
installed.packages(mFilter)
installed.packages("mFilter")
